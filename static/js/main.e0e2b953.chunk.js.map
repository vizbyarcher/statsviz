{"version":3,"sources":["App.js","index.js"],"names":["fetchURL","ComboSelect","params","console","log","useState","Array","length","valueSelected","setValueSelected","map","item","index","Autocomplete","id","options","d","v","getOptionLabel","option","value","style","width","onChange","event","selected","renderInput","TextField","label","p","variant","fullWidth","App","valueFirst","setValueFirst","valueSecond","items","setItemsFirst","setItemsSecond","euro","setEuro","codes","setCodes","code","setCode","content","setContent","codeParams","setCodeParams","useEffect","fetch","then","res","json","data","Set","sort","a","b","filteredFirst","filter","changeSecond","className","cont","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0e2b953.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Select } from 'react-select-virtualized'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport * as EuroJSONstat from 'jsonstat-euro'\n\nconst fetchURL =\n\t'https://raw.githubusercontent.com/vizbyarcher/statsviz/gh-pages/data/es/euro_meta.json'\nconst getItems = () => fetch(fetchURL).then(res => res.json())\n\nconst query = {\n\tlang: 'en',\n\tdataset: 'tec00001',\n\tfilter: {\n\t\tna_item: ['B1GQ'],\n\t\tunit: ['CP_EUR_HAB'],\n\t\ttime: [\n\t\t\t'2008',\n\t\t\t'2009',\n\t\t\t'2010',\n\t\t\t'2011',\n\t\t\t'2012',\n\t\t\t'2013',\n\t\t\t'2014',\n\t\t\t'2015',\n\t\t\t'2016',\n\t\t\t'2017',\n\t\t\t'2018',\n\t\t],\n\t\tgeo: [\n\t\t\t'AT',\n\t\t\t'BE',\n\t\t\t'BG',\n\t\t\t'CY',\n\t\t\t'CZ',\n\t\t\t'DE',\n\t\t\t'DK',\n\t\t\t'EE',\n\t\t\t'EL',\n\t\t\t'ES',\n\t\t\t'FI',\n\t\t\t'FR',\n\t\t\t'HR',\n\t\t\t'HU',\n\t\t\t'IE',\n\t\t\t'IT',\n\t\t\t'LT',\n\t\t\t'LU',\n\t\t\t'LV',\n\t\t\t'MT',\n\t\t\t'NL',\n\t\t\t'PL',\n\t\t\t'PT',\n\t\t\t'RO',\n\t\t\t'SE',\n\t\t\t'SI',\n\t\t\t'SK',\n\t\t\t'UK',\n\t\t\t'EU28',\n\t\t],\n\t},\n}\n\nconst json = [\n\t{ value: 1, label: 'John', cat: 'white' },\n\t{ value: 2, label: 'Paul', cat: 'white' },\n\t{ value: 5, label: 'Johnson', cat: 'white' },\n\t{ value: 7, label: 'Paulson', cat: 'black' },\n\t{ value: 9, label: 'Patrick', cat: 'black' },\n]\n\nconst propertyFirst = 'cat'\nconst propertySecond = 'label'\n\nconst changeFirst = data => {\n\tif (data) {\n\t\t// console.log(data)\n\t\tconst unique = [\n\t\t\t...new Set(\n\t\t\t\tdata\n\t\t\t\t\t.sort((a, b) => b[propertyFirst] - a[propertyFirst])\n\t\t\t\t\t.map(item => item[propertyFirst])\n\t\t\t),\n\t\t]\n\t\t// console.log(unique)\n\t\treturn unique.sort()\n\t} else {\n\t\t// console.log('No data for First combo...')\n\t\treturn []\n\t}\n}\n\nconst changeSecond = (data, valueFirst) => {\n\tif (valueFirst) {\n\t\t// console.log('Changing Second combo...')\n\t\tconst filteredFirst = data.filter(\n\t\t\titem => item[propertyFirst] === valueFirst\n\t\t)\n\t\tconst unique = [...new Set(filteredFirst.map(item => item[propertySecond]))]\n\t\t// console.log(unique)\n\t\treturn unique.sort()\n\t} else {\n\t\tconst unique = [...new Set(data.map(item => item[propertySecond]))]\n\t\t// console.log(unique)\n\t\treturn unique.sort()\n\t}\n}\n\nconst ComboSelect = ({ params }) => {\n\tconsole.log('params:', params)\n\tconst [valueSelected, setValueSelected] = useState(new Array(params.length))\n\t// console.log('empty:', new Array(params.length))\n\t// const options = params.map(item => item.p)\n\treturn (\n\t\t<div>\n\t\t\t{params.map((item, index) => (\n\t\t\t\t<Autocomplete\n\t\t\t\t\tid={index}\n\t\t\t\t\tkey={index}\n\t\t\t\t\toptions={item.d.v}\n\t\t\t\t\tgetOptionLabel={option => option}\n\t\t\t\t\tvalue={valueSelected[index]}\n\t\t\t\t\tstyle={{ width: 380 }}\n\t\t\t\t\tonChange={(event, value) => {\n\t\t\t\t\t\t// console.log(`first: ${value}`)\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t// console.log('changing value', value)\n\t\t\t\t\t\t\tlet selected = valueSelected\n\t\t\t\t\t\t\tselected[index] = value\n\t\t\t\t\t\t\tsetValueSelected(selected)\n\t\t\t\t\t\t\t// console.log('selected:', selected)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log('no value...')\n\t\t\t\t\t\t\tlet selected = valueSelected\n\t\t\t\t\t\t\tselected[index] = null\n\t\t\t\t\t\t\tsetValueSelected(selected)\n\t\t\t\t\t\t\t// console.log('selected:', selected)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\trenderInput={params => (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\tlabel={item.p}\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default function App() {\n\tconst [valueFirst, setValueFirst] = useState(null)\n\tconst [valueSecond, setValueSecond] = useState(null)\n\tconst [items, setItems] = useState([])\n\tconst [jstat, setJstat] = useState([])\n\tconst [itemsFirst, setItemsFirst] = useState([])\n\tconst [itemsSecond, setItemsSecond] = useState([])\n\tconst [euro, setEuro] = useState([])\n\tconst [codes, setCodes] = useState([])\n\tconst [code, setCode] = useState(null)\n\tconst [content, setContent] = useState(null)\n\tconst [codeParams, setCodeParams] = useState(null)\n\n\t// useEffect(() => {\n\t// \tEuroJSONstat.fetchDataset('une_rt_a').then(ds => {\n\t// \t\tconst statusId = ds.Data({\n\t// \t\t\t\tgeo: 'AT',\n\t// \t\t\t\ttime: '1983',\n\t// \t\t\t\tsex: 'T',\n\t// \t\t\t\tage: 'TOTAL',\n\t// \t\t\t\tunit: 'PC_ACT',\n\t// \t\t\t}).status,\n\t// \t\t\tstatusLabel = EuroJSONstat.getStatusLabel(ds, statusId)\n\t// \t\tconsole.log(`\"${statusId}\" = \"${statusLabel}\"`)\n\t// \t})\n\t// }, [])\n\n\tuseEffect(() => {\n\t\tfetch(fetchURL)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tsetEuro(res)\n\t\t\t\tconsole.log('euro:', res)\n\t\t\t\tsetCodes(res.map(item => item.id))\n\t\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (items) {\n\t\t\tsetItemsFirst(changeFirst(items))\n\t\t\t// console.log('items first:', changeFirst(items))\n\t\t} else {\n\t\t\tconsole.log('No data for itemsFirst')\n\t\t}\n\t}, [items])\n\n\tuseEffect(() => {\n\t\tif (items) {\n\t\t\tsetItemsSecond(changeSecond(items, valueFirst))\n\t\t} else {\n\t\t\tsetItemsSecond([])\n\t\t}\n\t}, [items, valueFirst])\n\n\tlet filtered = items\n\n\tif (valueSecond) {\n\t\tfiltered = items\n\t\t\t.filter(item => item[propertyFirst] === valueFirst)\n\t\t\t.filter(item => item[propertySecond] === valueSecond)\n\t} else if (valueFirst) {\n\t\tfiltered = items.filter(item => item[propertyFirst] === valueFirst)\n\t}\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<h1>React Select</h1>\n\t\t\t{/* <Select options={codes} /> */}\n\t\t\t{codes && (\n\t\t\t\t<Autocomplete\n\t\t\t\t\tid='combo-box-first'\n\t\t\t\t\toptions={codes}\n\t\t\t\t\tgetOptionLabel={option => option}\n\t\t\t\t\tvalue={valueFirst}\n\t\t\t\t\tstyle={{ width: 380 }}\n\t\t\t\t\tonChange={(event, value) => {\n\t\t\t\t\t\t// console.log(`first: ${value}`)\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t// console.log('changing first value', value)\n\t\t\t\t\t\t\tsetCode(value)\n\t\t\t\t\t\t\tconsole.log('code:', value)\n\t\t\t\t\t\t\tsetValueFirst(value)\n\t\t\t\t\t\t\tlet cont = euro.filter(item => item.id === value)[0]['f']\n\t\t\t\t\t\t\tconsole.log('cont:', cont)\n\t\t\t\t\t\t\tsetContent(cont)\n\t\t\t\t\t\t\tsetCodeParams(cont)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log('no first value...')\n\t\t\t\t\t\t\tsetCode(null)\n\t\t\t\t\t\t\tsetValueFirst(null)\n\t\t\t\t\t\t\tsetContent(null)\n\t\t\t\t\t\t\tsetCodeParams([])\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\trenderInput={params => (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\tlabel='Select Eurostat indicator:'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<br></br>\n\t\t\t{code && <div> {code} </div>}\n\t\t\t{content && <p> {content.map(item => item.p).join()} </p>}\n\t\t\t<br></br>\n\t\t\t{codeParams && <ComboSelect params={codeParams} />}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}